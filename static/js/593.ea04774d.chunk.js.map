{"version":3,"file":"static/js/593.ea04774d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { Field,Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 20px;\n  padding: 10px 15px;\n  border: 2px solid ${({theme}) => theme.hover};\n  border-radius: 10px;\n  outline: none;\n\n  :focus {\n    border-color: #fff;\n    box-shadow: ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: ${({theme}) => theme.body};\n  background-color:  ${({theme}) => theme.main};\n  cursor: pointer;\n\n  :hover {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin-left: -15px;\n`;\n","import styled from \"styled-components\";\nimport {FaUserAstronaut} from 'react-icons/fa';\n\nexport const Item = styled.li`\ndisplay: flex;\nflex-basis: calc(50% - 15px);\njustify-content: space-between;\nalign-items: center;\nmargin-left: 15px;\nmargin-bottom: 15px;\npadding: 15px 15px;\nborder: 1px solid ${({theme}) => theme.main}; \nborder-radius: 8px;\ntransition: background-color 0.25s ,box-shadow .5s cubic-bezier(.4,0,.2,1);\ntransition: all .25s cubic-bezier(.4,0,.2,1);\n\n  :hover, :focus {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n};\n`;\n\nexport const Name = styled.span`\n  margin-right: 10px;\n  color: ${({theme}) => theme.text};\n`;\n\nexport const Link = styled.a` \ntext-decoration: none;\ncolor: ${({theme}) => theme.text};\n  :hover {\n    color:  ${({theme}) => theme.nav};\n  }\n`;\n\nexport const IconUser = styled(FaUserAstronaut)`\ncolor:  ${({theme}) => theme.main};\nmargin-right: 5px;\n`;\n\nexport const Text = styled.p`\nfont-size: 20px;\nfont-weight: 500;\n`;\n\n\nexport const Button = styled.button`\n  font-size: 20px;\n  border: none;\n  border-radius: 5px;\n  border: 1px solid ${({theme}) => theme.main};\n  color: ${({theme}) => theme.main};\n  background-color: transparent;\n  cursor: pointer;\n\n  :hover {\n    color: \trgb(238, 75, 43);\n    border-color: rgb(238, 75, 43);\n  }\n`;","import styled from \"styled-components\";\n\nexport const ModalBackdrop = styled.div`\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100vw;\n   height: 100vh;\n   background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const Content = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   align-items: center;\n   position: absolute;\n   top: 50%;\n   left: 50%;\n   transform: translate(-50%, -50%);\n   min-height: 350px;\n   max-width: 350px;\n   width: 100%;\n   padding: 12px;\n   background-color: ${({theme}) => theme.nav};\n   border-radius: 3px;\n   box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n   0px 1px 1px 0ModalTitlepx rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ModalTitle = styled.h3`\n   color: ${({theme}) => theme.main};\n   margin-bottom: 10px;\n   font-size: 24px;\n`;\n\nexport const Contact = styled.p`\n   margin-bottom: 20px;\n   font-size: 18px;\n`;\n\n\n","import {useEffect} from \"react\";\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, Content } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal ({onClose, children}) {\n\n  useEffect(()=>{\n        const handleKeyDown = event => {\n            if (event.code === 'Escape') {\n              onClose();\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n\n        return(()=>{\n            window.removeEventListener('keydown', handleKeyDown);\n        })\n    },[onClose])\n\n    const handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n         onClose();\n        }\n      };\n   \n        return createPortal(\n            <ModalBackdrop onClick={handleBackdropClick}>\n                <Content>\n                {children}\n                </Content>\n            </ModalBackdrop>,\n            modalRoot\n        );\n};\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n`;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Notify } from \"notiflix\";\nimport { FormWrapper, InputContainer, Input, ErrorText, Button } from \"../ContactForm/ContactForm.styled\";\nimport {ButtonContainer} from './ModalForm.styled';\n\nimport {useDispatch } from \"react-redux\";\nimport { editContact } from \"redux/contacts/operations\";\nimport { useContacts } from \"hooks\";\n\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n  number: Yup.string().matches(phoneRegExp,'Enter valid number').required(),});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst ModalForm = ({contact:{name,id,number},onClose})=> {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n\n  const initialValues = {\n      name:name,\n      number:number,\n  }\n    return(\n        <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({name,number}, actions) =>{\n          const filteredContacts = contacts.filter(item => item.id !== id);\n          const isNameExist = filteredContacts.some(contact=> contact.name.toLowerCase() === name.toLowerCase());\n          const isPhoneExist = filteredContacts.find(\n            contact => contact.number.replace(/[^0-9]+/g, '') === number.replace(/[^0-9]+/g, '')\n          );\n\n          if (isNameExist) {\n            return Notify.failure(`${name} is already in contacts`);\n          };\n\n          if (isPhoneExist) {\n            return Notify.failure(`Number: ${number} is already in contacts`);\n          }\n\n            dispatch(editContact({\n              id,\n              name,\n              number,\n            }))\n            onClose();\n            actions.resetForm();\n        }}\n      > \n\n        <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Full name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"number\" type=\"tel\" placeholder=\"Phone number\"  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" />\n              <FormError name=\"number\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <ButtonContainer>\n          <Button type=\"submit\">Save</Button>\n          <Button type=\"submit\" onClick={onClose}>Cancel</Button>\n          </ButtonContainer>\n        </FormWrapper>\n      </Formik>\n    );\n};\n\nModalForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contacts: PropTypes.array,\n}\n\nexport default ModalForm;","import React from \"react\";\nimport {deleteContact} from 'redux/contacts/operations';\nimport { useDispatch } from \"react-redux\";\nimport { Link, Item, Name, IconUser, Text, Button } from \"./ContactItem.styled\";\nimport {ModalTitle, Contact} from '../Modal/Modal.styled'\nimport {MdDelete, MdEdit} from 'react-icons/md';\nimport {useState} from \"react\";\nimport Modal from \"../Modal\";\nimport ModalForm from '../ModalForm'\nimport { ButtonContainer } from \"components/ModalForm/ModalForm.styled\";\n\nconst ContactItem = ({contact:{name,id,number}}) => {\n    const dispatch = useDispatch();\n    const [isOpenModal, setIsOpenModal] = useState(false);\n\n    const closeModal=()=> {\n      setIsOpenModal(false)\n    };\n  \n    const openModal = () => {\n      setIsOpenModal(true)\n    };\n    \n    return (\n        <>\n            <Item key={id}>\n                <Text><IconUser/><Name>{name}</Name><Link href={`tel:${number}`}>{number}</Link></Text>\n            <ButtonContainer>\n            <Button type=\"button\" title=\"Edit contact\" onClick={openModal}><MdEdit/></Button>\n            <Button type=\"button\" title=\"Delete contact\" onClick={()=>dispatch(deleteContact(id))}><MdDelete/></Button>\n            </ButtonContainer>\n            </Item>\n\n            {isOpenModal && <Modal onClose={closeModal}>\n                <ModalTitle>Let's update the contact</ModalTitle>\n                <Contact>{name}: {number}</Contact>\n            <ModalForm onClose={closeModal} contact={{name,id,number}}/>\n            </Modal>}\n        </>\n)\n};\n\nexport default ContactItem;","import React from \"react\";\nimport { List } from \"./ContactList.styled\";\nimport ContactItem from \"components/ContactItem/ContactItem\";\n\nimport { useVisibleContacts } from \"hooks\";\n\nconst ContactList = () => {\n    const contacts = useVisibleContacts();\n\n    return (\n        <List>\n            {contacts.map(({name, id, number})=>\n            <ContactItem key={id} contact={{name, id, number}}>\n            </ContactItem>\n            )}\n        </List>\n    );\n};\n\nexport default ContactList;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Notify } from \"notiflix\";\nimport { FormWrapper, InputContainer, Input, ErrorText, Button } from \"./ContactForm.styled\";\n\nimport {useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { useContacts } from \"hooks\";\n\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n    number: Yup.string().matches(phoneRegExp,'Enter valid number').required(),});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst ContactForm = ()=> {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n\n  const initialValues = {\n      name:'',\n      number:'',\n  }\n    return(\n        <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) =>{\n          const isInclude = contacts.some(contact=> contact.name.toLowerCase() === values.name.toLowerCase());\n          \n          if(isInclude){\n            return Notify.failure(`${values.name} is already in contacts`);\n          }\n            dispatch(addContact(values))\n            actions.resetForm();\n        }}\n      > \n\n        <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Full name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"number\" type=\"tel\" placeholder=\"Phone number\"  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" />\n              <FormError name=\"number\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <Button type=\"submit\">Add contact</Button>\n        </FormWrapper>\n      </Formik>\n    );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contacts: PropTypes.array,\n}\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 5px 10px;\n  border: 2px solid ${({theme}) => theme.hover};\n  border-radius: 5px;\n  outline: none;\n  \n  :focus {\n    border-color: ${({theme}) => theme.nav};\n    box-shadow: ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`","import React from \"react\";\nimport { FilterContainer, Input } from \"./Filter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilterValue } from \"redux/contacts/filterSlice\";\n\nconst Filter = ()=>{\n    const dispatch = useDispatch();\n    return(\n        <FilterContainer>\n            <Input type=\"text\" onChange={e=>dispatch(setFilterValue(e.target.value))}  placeholder='Find contacts by name' />\n        </FilterContainer>\n    )\n};\n\n\nexport default Filter;","import { useEffect} from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\n\nimport { MainTitle, Title } from \"../components/Layout/Layout.styled\";\nimport ContactList from '../components/ContactList/ContactList'\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Filter from \"../components/Filter/Filter\";\n\n \n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch]);\n\n    return (\n        <>\n          <MainTitle>Let's add a new contact to your phonebook</MainTitle>\n          <ContactForm/>\n          <Title>Contacts</Title>\n          <Filter/>\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactList/>\n        </>\n    );\n  };\n\nexport default Contacts; \n\n"],"names":["FormWrapper","styled","Form","InputContainer","Input","Field","theme","hover","shadow","ErrorText","Button","body","main","ButtonText","List","Item","Name","text","Link","nav","IconUser","FaUserAstronaut","Text","ModalBackdrop","Content","ModalTitle","Contact","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","ButtonContainer","validationSchema","Yup","shape","name","min","matches","required","number","FormError","render","message","contact","id","dispatch","useDispatch","contacts","useContacts","initialValues","onSubmit","actions","filteredContacts","filter","item","isNameExist","some","toLowerCase","isPhoneExist","find","replace","Notify","editContact","resetForm","autoComplete","type","placeholder","title","component","useState","isOpenModal","setIsOpenModal","closeModal","href","deleteContact","useVisibleContacts","map","values","addContact","FilterContainer","onChange","e","setFilterValue","value","isLoading","useSelector","selectIsLoading","error","selectError","fetchContacts"],"sourceRoot":""}