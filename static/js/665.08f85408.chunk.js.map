{"version":3,"file":"static/js/665.08f85408.chunk.js","mappings":"4UAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uEAKXE,EAAiBF,EAAAA,GAAAA,IAAH,gDAIdG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,oPAaLK,EAAYL,EAAAA,GAAAA,EAAH,+EAOTM,EAASN,EAAAA,GAAAA,OAAH,sSAeNO,EAAaP,EAAAA,GAAAA,IAAH,gF,qIC7CVQ,EAAQR,EAAAA,GAAAA,GAAH,uIAOLS,EAAOT,EAAAA,GAAAA,EAAH,wEAKJU,EAAYV,EAAAA,GAAAA,EAAH,mY,mICJhBW,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,IAAI,GAAGC,QAJT,yHAI4B,oBAAoBC,WACjEC,MAAON,EAAAA,KAAaG,IAAI,IAAIC,QAJV,8CAI8B,qBAAqBC,WACrEE,SAAUP,EAAAA,KAAaG,IAAI,GAAGE,aAG1BG,EAAY,SAAC,GAAc,IAAZN,EAAW,EAAXA,KACjB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNO,OAAQ,SAAAC,GAAO,OAAI,SAAC,IAAD,UAAYA,GAAhB,GAGtB,EAGYC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,SAAC,KAAD,CACIC,cAnBgB,CACpBZ,KAAK,GACLI,MAAM,GACNC,SAAS,IAiBLR,iBAAkBA,EAClBgB,SAfa,SAACC,EAAQC,GAC5BL,GACEM,EAAAA,EAAAA,IAAS,CACPhB,KAAMc,EAAOd,KACbI,MAAOU,EAAOV,MACdC,SAAUS,EAAOT,YAGrBU,EAAQE,WACT,EAGG,UAKE,UAAC,KAAD,CAAaC,aAAa,MAA1B,WACI,SAAC,KAAD,WACE,4BACE,SAAC,KAAD,CAAOlB,KAAK,OAAOmB,KAAK,OAAOC,YAAY,YAAYC,MAAM,4IAC7D,SAACf,EAAD,CAAWN,KAAK,OAAOsB,UAAU,eAIrC,SAAC,KAAD,WACE,4BACE,SAAC,KAAD,CAAOtB,KAAK,QAAQmB,KAAK,QAAQC,YAAY,QAASC,MAAM,kEAC5D,SAACf,EAAD,CAAWN,KAAK,QAAQsB,UAAU,eAItC,SAAC,KAAD,WACE,4BACE,SAAC,KAAD,CAAOtB,KAAK,WAAWmB,KAAK,WAAWC,YAAY,WAAWF,aAAa,SAC3E,SAACZ,EAAD,CAAWN,KAAK,WAAWsB,UAAU,eAIzC,SAAC,KAAD,CAAQH,KAAK,SAAb,0BAIT,E,UC3Ec,SAASI,IACtB,OACE,iCACA,SAAC,KAAD,mCACA,SAACd,EAAD,MAGH,C","sources":["components/ContactForm/ContactForm.styled.js","pages/Home.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { Field,Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 20px;\n  padding: 10px 15px;\n  border: 2px solid rgb(4, 196, 248);\n  border-radius: 10px;\n  outline: none;\n\n  :focus {\n    border-color: #fff;\n    box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: #fff;\n  background-color: rgb(66, 135, 245);\n  cursor: pointer;\n\n  :hover {\n    background-color: rgb(4, 196, 248);\n    box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n    text-transform: uppercase;\n    margin-bottom: 20px;\n    font-size: 36px;\n    color: rgb(66, 135, 245);\n`;\n\nexport const Text = styled.p`\n    font-size: 18px;\n    margin-bottom: 20px;\n`;\n\nexport const StartLink = styled.a`\n    border: 0 solid transparent;\n    border-radius: 4px;\n    color: #fff;\n    background-color: rgb(66, 135, 245);\n    display: inline-block;\n    text-decoration: none;\n    text-transform: uppercase;\n    padding: 10px 16px;\n\n    :hover, :focus {\n        background-color: rgb(4, 196, 248);\n        box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n    }\n`;","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { FormWrapper, InputContainer, Input, ErrorText, Button } from \"../ContactForm/ContactForm.styled\";\n\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n  email: Yup.string().min(10).matches(emailRegExp,'Enter valid email').required(),\n  password: Yup.string().min(6).required(),\n});\n\nconst FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n};\n\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name:'',\n    email:'',\n    password:'',\n};\n\nconst handleSubmit = (values, actions) => {\n  dispatch(\n    register({\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    })\n  );\n  actions.resetForm();\n};\n\n  return (\n    <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n    > \n      <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Your name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"email\" type=\"email\" placeholder=\"Email\"  title=\"Email must contain an “@” symbol before the domain\" />\n              <FormError name=\"email\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete='off' />\n              <FormError name=\"password\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <Button type=\"submit\">Register</Button>\n        </FormWrapper>\n      </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Title } from \"./Home.styled\";\n\nexport default function Register() {\n  return (\n    <>\n    <Title>Create your account</Title>\n    <RegisterForm />\n    </>\n  );\n}"],"names":["FormWrapper","styled","Form","InputContainer","Input","Field","ErrorText","Button","ButtonText","Title","Text","StartLink","validationSchema","Yup","shape","name","min","matches","required","email","password","FormError","render","message","RegisterForm","dispatch","useDispatch","initialValues","onSubmit","values","actions","register","resetForm","autoComplete","type","placeholder","title","component","Register"],"sourceRoot":""}