{"version":3,"file":"static/js/195.44688674.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.js","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Spinner/Spinner.js","pages/Contacts.js","utils/formik.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: ${({theme}) => theme.body};\n  background-color:  ${({theme}) => theme.main};\n  cursor: pointer;\n\n  :hover {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\n","import React from \"react\";\nimport { ButtonStyled } from \"./Button.styled\";\n\nconst Button = ({\n    type = \"button\",\n    children,\n    ...otherProps\n  }) => {\n    return (\n      <ButtonStyled type={type}\n        {...otherProps}\n      >\n        {children}\n      </ButtonStyled>\n    );\n  };\n  export default Button;","import { Field,Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 20px;\n  padding: 10px 15px;\n  border: 2px solid ${({theme}) => theme.hover};\n  border-radius: 10px;\n  outline: none;\n\n  :focus {\n    border-color: #fff;\n    box-shadow: ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: ${({theme}) => theme.body};\n  background-color:  ${({theme}) => theme.main};\n  cursor: pointer;\n\n  :hover {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin-left: -15px;\n`;\n","import styled from \"styled-components\";\nimport {FaUserAstronaut} from 'react-icons/fa';\n\nexport const Item = styled.li`\ndisplay: flex;\nflex-basis: calc(50% - 15px);\njustify-content: space-between;\nalign-items: center;\nmargin-left: 15px;\nmargin-bottom: 15px;\npadding: 15px 15px;\nborder: 1px solid ${({theme}) => theme.main}; \nborder-radius: 8px;\ntransition: background-color 0.25s ,box-shadow .5s cubic-bezier(.4,0,.2,1);\ntransition: all .25s cubic-bezier(.4,0,.2,1);\n\n  :hover, :focus {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n};\n`;\n\nexport const Name = styled.span`\n  margin-right: 10px;\n  color: ${({theme}) => theme.text};\n`;\n\nexport const Link = styled.a` \ntext-decoration: none;\ncolor: ${({theme}) => theme.text};\n  :hover {\n    color:  ${({theme}) => theme.nav};\n  }\n`;\n\nexport const IconUser = styled(FaUserAstronaut)`\ncolor:  ${({theme}) => theme.main};\nmargin-right: 5px;\n`;\n\nexport const Text = styled.p`\nfont-size: 20px;\nfont-weight: 500;\n`;\n\n\nexport const Button = styled.button`\n  font-size: 20px;\n  border: none;\n  border-radius: 5px;\n  border: 1px solid ${({theme}) => theme.main};\n  color: ${({theme}) => theme.main};\n  background-color: transparent;\n  cursor: pointer;\n\n  :hover {\n    color: \trgb(238, 75, 43);\n    border-color: rgb(238, 75, 43);\n  }\n`;","import styled from \"styled-components\";\n\nexport const ModalBackdrop = styled.div`\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100vw;\n   height: 100vh;\n   background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const Content = styled.div`\n   display: flex;\n   flex-direction: column;\n   justify-content: center;\n   align-items: center;\n   position: absolute;\n   top: 50%;\n   left: 50%;\n   transform: translate(-50%, -50%);\n   min-height: 350px;\n   max-width: 350px;\n   width: 100%;\n   padding: 12px;\n   background-color: ${({theme}) => theme.nav};\n   border-radius: 3px;\n   box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n   0px 1px 1px 0ModalTitlepx rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ModalTitle = styled.h3`\n   color: ${({theme}) => theme.main};\n   margin-bottom: 10px;\n   font-size: 24px;\n`;\n\nexport const Contact = styled.p`\n   margin-bottom: 20px;\n   font-size: 18px;\n`;\n\n\n","import {useEffect} from \"react\";\nimport { createPortal } from 'react-dom';\nimport { ModalBackdrop, Content } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal ({onClose, children}) {\n\n  useEffect(()=>{\n        const handleKeyDown = event => {\n            if (event.code === 'Escape') {\n              onClose();\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n\n        return(()=>{\n            window.removeEventListener('keydown', handleKeyDown);\n        })\n    },[onClose])\n\n    const handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n         onClose();\n        }\n      };\n   \n        return createPortal(\n            <ModalBackdrop onClick={handleBackdropClick}>\n                <Content>\n                {children}\n                </Content>\n            </ModalBackdrop>,\n            modalRoot\n        );\n};\n\nexport default Modal;","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n`;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { Notify } from \"notiflix\";\nimport { FormWrapper, InputContainer, Input } from \"../ContactForm/ContactForm.styled\";\nimport  Button  from \"components/Button\";\nimport {ButtonContainer} from './ModalForm.styled';\nimport {nameRegExp, phoneRegExp, FormError} from 'utils/formik'\n\nimport {useDispatch } from \"react-redux\";\nimport { editContact } from \"redux/contacts/operations\";\nimport { useContacts } from \"hooks\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n  number: Yup.string().matches(phoneRegExp,'Enter valid number').required(),});\n\nconst ModalForm = ({contact:{name,id,number},onClose})=> {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n\n  const initialValues = {\n      name:name,\n      number:number,\n  }\n    return(\n        <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({name,number}, actions) =>{\n          const filteredContacts = contacts.filter(item => item.id !== id);\n          const isNameExist = filteredContacts.some(contact=> contact.name.toLowerCase() === name.toLowerCase());\n          const isPhoneExist = filteredContacts.find(\n            contact => contact.number.replace(/[^0-9]+/g, '') === number.replace(/[^0-9]+/g, '')\n          );\n\n          if (isNameExist) {\n            return Notify.failure(`${name} is already in contacts`);\n          };\n\n          if (isPhoneExist) {\n            return Notify.failure(`Number: ${number} is already in contacts`);\n          }\n\n            dispatch(editContact({\n              id,\n              name,\n              number,\n            }))\n            onClose();\n            actions.resetForm();\n        }}\n      > \n\n        <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Full name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"number\" type=\"tel\" placeholder=\"Phone number\"  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" />\n              <FormError name=\"number\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <ButtonContainer>\n          <Button type={\"submit\"}>Save</Button>\n          <Button type={\"submit\"} onClick={onClose}>Cancel</Button>\n          </ButtonContainer>\n        </FormWrapper>\n      </Formik>\n    );\n};\n\nModalForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contacts: PropTypes.array,\n}\n\nexport default ModalForm;","import React from \"react\";\nimport {deleteContact} from 'redux/contacts/operations';\nimport { useDispatch } from \"react-redux\";\nimport { Link, Item, Name, IconUser, Text, Button } from \"./ContactItem.styled\";\nimport {ModalTitle, Contact} from '../Modal/Modal.styled'\nimport {MdDelete, MdEdit} from 'react-icons/md';\nimport {useState} from \"react\";\nimport Modal from \"../Modal\";\nimport ModalForm from '../ModalForm'\nimport { ButtonContainer } from \"components/ModalForm/ModalForm.styled\";\n\nconst ContactItem = ({contact:{name,id,number}}) => {\n    const dispatch = useDispatch();\n    const [isOpenModal, setIsOpenModal] = useState(false);\n\n    const closeModal=()=> {\n      setIsOpenModal(false)\n    };\n  \n    const openModal = () => {\n      setIsOpenModal(true)\n    };\n    \n    return (\n        <>\n            <Item key={id}>\n                <Text><IconUser/><Name>{name}</Name><Link href={`tel:${number}`}>{number}</Link></Text>\n            <ButtonContainer>\n            <Button type=\"button\" title=\"Edit contact\" onClick={openModal}><MdEdit/></Button>\n            <Button type=\"button\" title=\"Delete contact\" onClick={()=>dispatch(deleteContact(id))}><MdDelete/></Button>\n            </ButtonContainer>\n            </Item>\n\n            {isOpenModal && <Modal onClose={closeModal}>\n                <ModalTitle>Let's update the contact</ModalTitle>\n                <Contact>{name}: {number}</Contact>\n            <ModalForm onClose={closeModal} contact={{name,id,number}}/>\n            </Modal>}\n        </>\n)\n};\n\nexport default ContactItem;","import React from \"react\";\nimport { List } from \"./ContactList.styled\";\nimport ContactItem from \"components/ContactItem/ContactItem\";\n\nimport { useVisibleContacts } from \"hooks\";\n\nconst ContactList = () => {\n    const contacts = useVisibleContacts();\n\n    return (\n        <List>\n            {contacts.map(({name, id, number})=>\n            <ContactItem key={id} contact={{name, id, number}}>\n            </ContactItem>\n            )}\n        </List>\n    );\n};\n\nexport default ContactList;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { Notify } from \"notiflix\";\nimport { FormWrapper, InputContainer, Input } from \"./ContactForm.styled\";\nimport  Button  from \"components/Button\";\nimport {nameRegExp, phoneRegExp, FormError} from 'utils/formik';\n\nimport {useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { useContacts } from \"hooks\";\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n    number: Yup.string().matches(phoneRegExp,'Enter valid number').required(),});\n\nconst ContactForm = ()=> {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n\n  const initialValues = {\n      name:'',\n      number:'',\n  }\n    return(\n        <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) =>{\n          const isInclude = contacts.some(contact=> contact.name.toLowerCase() === values.name.toLowerCase());\n          \n          if(isInclude){\n            return Notify.failure(`${values.name} is already in contacts`);\n          }\n            dispatch(addContact(values))\n            actions.resetForm();\n        }}\n      > \n\n        <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Full name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"number\" type=\"tel\" placeholder=\"Phone number\"  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" />\n              <FormError name=\"number\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <Button type={\"submit\"}>Add contact</Button>\n        </FormWrapper>\n      </Formik>\n    );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contacts: PropTypes.array,\n}\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 5px 10px;\n  border: 2px solid ${({theme}) => theme.hover};\n  border-radius: 5px;\n  outline: none;\n  \n  :focus {\n    border-color: ${({theme}) => theme.nav};\n    box-shadow: ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`","import React from \"react\";\nimport { FilterContainer, Input } from \"./Filter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilterValue } from \"redux/contacts/filterSlice\";\n\nconst Filter = ()=>{\n    const dispatch = useDispatch();\n    return(\n        <FilterContainer>\n            <Input type=\"text\" onChange={e=>dispatch(setFilterValue(e.target.value))}  placeholder='Find contacts by name' />\n        </FilterContainer>\n    )\n};\n\n\nexport default Filter;","import { ColorRing } from  'react-loader-spinner'\n\n const Spinner = ()=>(\n    <ColorRing\n    visible={true}\n    ariaLabel=\"blocks-loading\"\n    wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        margin: '0 auto',\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        right: '0',\n        bottom: '0',\n        zIndex: '9999',\n      }}\n    wrapperClass=\"blocks-wrapper\"\n    colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n  />\n);\n\nexport default Spinner;","import { useEffect} from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\n\nimport { MainTitle, Title } from \"../components/Layout/Layout.styled\";\nimport ContactList from '../components/ContactList'\nimport ContactForm from \"../components/ContactForm\";\nimport Filter from \"../components/Filter\";\nimport Spinner from \"components/Spinner\";\n\n \n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch]);\n\n    return (\n        <>\n          <MainTitle>Let's add a new contact to your phonebook</MainTitle>\n          <ContactForm/>\n          <Title>Contacts</Title>\n          <Filter/>\n          {isLoading && !error && <Spinner/>}\n         \n          <ContactList/>\n        </>\n    );\n  };\n\nexport default Contacts; \n\n","import {  ErrorMessage } from 'formik';\nimport { ErrorText } from \"../components/ContactForm/ContactForm.styled\";\n\nexport const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\nexport const nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nexport const emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;"],"names":["ButtonStyled","styled","theme","body","main","hover","shadow","type","children","otherProps","FormWrapper","Form","InputContainer","Input","Field","ErrorText","List","Item","Name","text","Link","nav","IconUser","FaUserAstronaut","Text","Button","ModalBackdrop","Content","ModalTitle","Contact","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","ButtonContainer","validationSchema","Yup","shape","name","min","matches","nameRegExp","required","number","phoneRegExp","contact","id","dispatch","useDispatch","contacts","useContacts","initialValues","onSubmit","actions","filteredContacts","filter","item","isNameExist","some","toLowerCase","isPhoneExist","find","replace","Notify","editContact","resetForm","autoComplete","placeholder","title","component","useState","isOpenModal","setIsOpenModal","closeModal","href","deleteContact","useVisibleContacts","map","values","addContact","FilterContainer","onChange","e","setFilterValue","value","visible","ariaLabel","wrapperStyle","display","justifyContent","alignItems","height","margin","position","top","left","right","bottom","zIndex","wrapperClass","colors","isLoading","useSelector","selectIsLoading","error","selectError","fetchContacts","FormError","render","message","emailRegExp"],"sourceRoot":""}