{"version":3,"file":"static/js/977.259ec385.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { Field,Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 20px;\n  padding: 10px 15px;\n  border: 2px solid rgb(4, 196, 248);\n  border-radius: 10px;\n  outline: none;\n\n  :focus {\n    border-color: #fff;\n    box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: #fff;\n  background-color: rgb(66, 135, 245);\n  cursor: pointer;\n\n  :hover {\n    background-color: rgb(4, 196, 248);\n    box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 5px;\n`;\n","import styled from \"styled-components\";\nimport {FaUserAstronaut} from 'react-icons/fa';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin-left: -15px;\n/* margin-top: -15px; */\n\n`;\n\nexport const Item = styled.li`\ndisplay: flex;\nflex-basis: calc(50% - 15px);\njustify-content: space-between;\nalign-items: center;\nmargin-left: 15px;\n/* margin-top: 15px; */\nmargin-bottom: 15px;\npadding: 15px 15px;\nborder: 1px solid rgb(66, 135, 245); \nborder-radius: 8px;\ntransition: background-color 0.25s ,box-shadow .5s cubic-bezier(.4,0,.2,1);\ntransition: all .25s cubic-bezier(.4,0,.2,1);\n\n  :hover, :focus {\n    background-color: rgb(4, 196, 248);\n    box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n};\n`;\n\nexport const Name = styled.span`\nmargin-right: 10px;\ncolor: rgb(42, 54, 59);\n`;\n\nexport const Link = styled.a` \ntext-decoration: none;\ncolor: rgb(0, 0, 0);\n  :hover {\n    color: rgb(255, 255, 255);\n  }\n`;\n\nexport const IconUser = styled(FaUserAstronaut)`\ncolor: rgb(66, 135, 245);\nmargin-right: 5px;\n`;\n\nexport const Text = styled.p`\nfont-size: 20px;\nfont-weight: 500;\n`;\n\n\nexport const Button = styled.button`\n  font-size: 20px;\n  border: none;\n  border-radius: 5px;\n  border: 1px solid rgb(66, 135, 245);\n  color: rgb(66, 135, 245);\n  background-color: transparent;\n  cursor: pointer;\n\n  :hover {\n    color: \t#EE4B2B;\n    border-color: #EE4B2B;\n  }\n`;\n\n","import React from \"react\";\nimport {MdDelete} from 'react-icons/md';\nimport { List, Link, Item, Name, IconUser, Text, Button } from \"./ContactList.styled\";\n\nimport {deleteContact} from 'redux/contacts/operations';\nimport { useDispatch } from \"react-redux\";\nimport { useVisibleContacts } from \"hooks\";\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useVisibleContacts();\n    \n    return (\n        <List>\n            {contacts.map(({name, id, number})=>\n            <Item key={id}>\n                <Text><IconUser/><Name>{name}</Name><Link href={`tel:${number}`}>{number}</Link></Text>\n            <Button type=\"button\" title=\"Delete contact\" onClick={()=>dispatch(deleteContact(id))}><MdDelete/></Button>\n            </Item>\n            )}\n        </List>\n    );\n};\n\nexport default ContactList;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Notify } from \"notiflix\";\nimport { FormWrapper, InputContainer, Input, ErrorText, Button } from \"./ContactForm.styled\";\n\nimport {useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { useContacts } from \"hooks\";\n\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n    number: Yup.string().matches(phoneRegExp,'Enter valid number').required(),});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst ContactForm = ()=> {\n  const dispatch = useDispatch();\n  const contacts = useContacts();\n\n  const initialValues = {\n      name:'',\n      number:'',\n  }\n    return(\n        <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) =>{\n          const isInclude = contacts.some(contact=> contact.name.toLowerCase() === values.name.toLowerCase());\n          \n          if(isInclude){\n            return Notify.failure(`${values.name} is already in contacts`);\n          }\n            dispatch(addContact(values))\n            actions.resetForm();\n        }}\n      > \n\n        <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Full name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"number\" type=\"tel\" placeholder=\"Phone number\"  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\" />\n              <FormError name=\"number\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <Button type=\"submit\">Add contact</Button>\n        </FormWrapper>\n      </Formik>\n    );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contacts: PropTypes.array,\n}\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  padding: 5px 10px;\n  border: 2px solid rgb(4, 196, 248);\n  border-radius: 5px;\n  outline: none;\n  \n  :focus {\n    border-color: #fff;\n    box-shadow: rgb(42, 153, 159) 0px 0px 5px 2px;\n  }\n`","import React from \"react\";\nimport { FilterContainer, Input } from \"./Filter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { setFilterValue } from \"redux/contacts/filterSlice\";\n\nconst Filter = ()=>{\n    const dispatch = useDispatch();\n    return(\n        <FilterContainer>\n            <Input type=\"text\" onChange={e=>dispatch(setFilterValue(e.target.value))}  placeholder='Find contacts by name' />\n        </FilterContainer>\n    )\n};\n\n\nexport default Filter;","import { useEffect} from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\n\nimport { MainTitle, Title } from \"../components/Layout/Layout.styled\";\nimport ContactList from '../components/ContactList/ContactList'\nimport ContactForm from \"../components/ContactForm/ContactForm\";\nimport Filter from \"../components/Filter/Filter\";\n\n \n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(()=>{\n    dispatch(fetchContacts())\n  },[dispatch]);\n\n    return (\n        <>\n          <MainTitle>Let's add a new contact to your phonebook</MainTitle>\n          <ContactForm/>\n          <Title>Contacts</Title>\n          <Filter/>\n          {isLoading && !error && <b>Request in progress...</b>}\n          <ContactList/>\n        </>\n    );\n  };\n\nexport default Contacts; \n\n"],"names":["FormWrapper","styled","Form","InputContainer","Input","Field","ErrorText","Button","ButtonText","List","Item","Name","Link","IconUser","FaUserAstronaut","Text","dispatch","useDispatch","contacts","useVisibleContacts","map","name","id","number","href","type","title","onClick","deleteContact","validationSchema","Yup","shape","min","matches","required","FormError","render","message","useContacts","initialValues","onSubmit","values","actions","some","contact","toLowerCase","Notify","addContact","resetForm","autoComplete","placeholder","component","FilterContainer","onChange","e","setFilterValue","target","value","isLoading","useSelector","selectIsLoading","error","selectError","useEffect","fetchContacts"],"sourceRoot":""}