{"version":3,"file":"static/js/869.1f217c5f.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.js","pages/Home.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js","utils/formik.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: ${({theme}) => theme.body};\n  background-color:  ${({theme}) => theme.main};\n  cursor: pointer;\n\n  :hover {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\n","import React from \"react\";\nimport { ButtonStyled } from \"./Button.styled\";\n\nconst Button = ({\n    type = \"button\",\n    children,\n    ...otherProps\n  }) => {\n    return (\n      <ButtonStyled type={type}\n        {...otherProps}\n      >\n        {children}\n      </ButtonStyled>\n    );\n  };\n  export default Button;","import { Field,Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 20px;\n  padding: 10px 15px;\n  border: 2px solid ${({theme}) => theme.hover};\n  border-radius: 10px;\n  outline: none;\n\n  :focus {\n    border-color: #fff;\n    box-shadow: ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n  font-size: 20px;\n  border-radius: 6px;\n  border: none;\n  color: ${({theme}) => theme.body};\n  background-color:  ${({theme}) => theme.main};\n  cursor: pointer;\n\n  :hover {\n    background-color:  ${({theme}) => theme.hover};\n    box-shadow:  ${({theme}) => theme.shadow} 0px 0px 5px 2px;\n  }\n`;\n\nexport const ButtonText = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\nimport {MdContactPhone} from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\n\nexport const Icon = styled(MdContactPhone)`\n    height: 160px;\n    width: 160px;\n    color: ${({theme}) => theme.main}; \n`;\n\nexport const Title = styled.h1`\n    text-transform: uppercase;\n    margin-bottom: 20px;\n    font-size: 36px;\n    color: ${({theme}) => theme.main}; \n`;\n\nexport const Text = styled.p`\n    font-size: 18px;\n    margin-bottom: 20px;\n    color: ${({theme}) => theme.text};\n`;\n\nexport const StartLink = styled(NavLink)`\n    border: 0 solid transparent;\n    border-radius: 4px;\n    color: ${({theme}) => theme.body}; \n    background-color: ${({theme}) => theme.main}; \n    display: inline-block;\n    text-decoration: none;\n    text-transform: uppercase;\n    padding: 10px 16px;\n\n    :hover, :focus {\n        color: ${({theme}) => theme.text}; \n        background-color: ${({theme}) => theme.hover}; \n        box-shadow: ${({theme}) => theme.shadow}  0px 0px 5px 2px;\n    }\n`;","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { FormWrapper, InputContainer, Input } from \"../ContactForm/ContactForm.styled\";\nimport  Button  from \"components/Button\";\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { FormError, nameRegExp,emailRegExp } from 'utils/formik';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().min(3).matches(nameRegExp,'Enter valid name').required(),\n  email: Yup.string().min(10).matches(emailRegExp,'Enter valid email').required(),\n  password: Yup.string().min(6).required(),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name:'',\n    email:'',\n    password:'',\n};\n\nconst handleSubmit = (values, actions) => {\n  dispatch(\n    register({\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    })\n  );\n  actions.resetForm();\n};\n\n  return (\n    <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n    > \n      <FormWrapper autoComplete=\"off\">\n          <InputContainer>\n            <div>\n              <Input name=\"name\" type=\"text\" placeholder=\"Your name\" title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" />\n              <FormError name=\"name\" component='span' />\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"email\" type=\"email\" placeholder=\"Email\"  title=\"Email must contain an “@” symbol before the domain\" />\n              <FormError name=\"email\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <InputContainer>\n            <div>\n              <Input name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete='off' />\n              <FormError name=\"password\" component='span'/>\n            </div>\n          </InputContainer>\n\n          <Button type={\"submit\"}>Register</Button>\n        </FormWrapper>\n      </Formik>\n  );\n};\n\n\nexport default RegisterForm;","import  RegisterForm  from 'components/RegisterForm';\nimport { Title } from \"./Home.styled\";\n\nexport default function Register() {\n  return (\n    <>\n    <Title>Create your account</Title>\n    <RegisterForm />\n    </>\n  );\n}","import {  ErrorMessage } from 'formik';\nimport { ErrorText } from \"../components/ContactForm/ContactForm.styled\";\n\nexport const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\nexport const nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nexport const phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nexport const emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;"],"names":["ButtonStyled","styled","theme","body","main","hover","shadow","type","children","otherProps","FormWrapper","Form","InputContainer","Input","Field","ErrorText","Icon","MdContactPhone","Title","Text","text","StartLink","NavLink","validationSchema","Yup","shape","name","min","matches","nameRegExp","required","email","emailRegExp","password","dispatch","useDispatch","initialValues","onSubmit","values","actions","register","resetForm","autoComplete","placeholder","title","component","Button","Register","FormError","render","message","phoneRegExp"],"sourceRoot":""}